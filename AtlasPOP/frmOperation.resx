<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACY
        EQAAAk1TRnQBSQFMAgEBAgEAAWgBAAFoAQABIwEAASMBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGM
        AwABIwMAAQEBAAEgBQABkAFM/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wB3AAMQARUDHwEsAyQBNAMk
        ATQDHQEoAwwBEDwAAyQBNAMkATQDJAE0AxgBIQMHAQlgAAMKAQ0DGwElAyQBNAMkATQDIQEwAxIBGP8A
        UQADLAFDA0wBkANUAagDVAGoA0cBggMkATU8AANUAagDVAGoA1QBqAM+AWoDFQEdYAADHgErA0MBdwNU
        AagDVAGoA1ABmgMxAU7/AEUABAEDDAEPAxUBHANEAXgDYQHeA7QB/wO0Af8DXQHMAzsBZQMTARoDCQEM
        NAADzAH/A9IB/wPaAf8DVgGrAy0BRQMQARUDBgEIUAADCAEKAxIBGAM2AVcDWQG+A9kB/wPRAf8DagHq
        A0MBdv8ARQADAwEEAy4BRwNKAYoDWQG+A1kB7wNLAf8DSwH/A2EB5gNWAbUDRgF+AygBOzQAA2UB/wNu
        Af8DggH/A14B1wNTAaUDPQFpAxsBJlAAAyMBMgNCAXUDVQGuA14B3wOBAf8DbAH/A10B6gNDAXb/AD0A
        BAEDBAEFAwwBDwNHAYADbQHwA1wB/wMNAf8DAAH/AwAB/wMbAf8DagH/A2EB3AM/AWwDBgEIAwMBBCwA
        AxYB/wMeAf8DJQH/A2sB/wPLAf8DWAG4Ay4BSAMFAQYDAgEDQAADAgEDAwYBBwM4BFwBzQO8Af8DXAH/
        AyMB/wMdAf8DVAHqA0MBdv8APQADCwEOAy4ERwGAA1gBvANSAfcDKwH/AwEB/wMAAf8DAAH/AwgB/wMy
        Af8DXgHtA1cBsQNDAXYDKQE9AwMBBCgAA3EB/wNJAf8DIQH/A0EB/wNxAf8DYQHaA1EBngM7AWQDHgEr
        QAADJAE1A0ABbgNTAakDYQHkA2gB/wM3Af8DJwH/A1AB/wNgAeoDQwF2/wA9AAMUARsDSgGJA3UB8QNc
        AfgDFAH+AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/Ay4B/QNsAfcDYgHkA0MBdgMGAQgoAAPYAf8DgAH/
        AxwB/wMWAf8DIwH/A18B+wOBAfUDWQHBAzQBU0AAAz0BZwNfAdUDegH2A0QB/AMhAf8DEwH/AywB/wOQ
        Af8DagHqA0MBdv8ANQADEAEVAywBQwNEAXgDWgG9A1sB/wMrAf8DAAH/AwkB/wMiAf8DKgH/AyoB/wMe
        Af8DBQH/AwMB/wMzAf8DbAH3A1cBsQM+AWsDKAE7AwkBDCAAA04BmANaAccDYgH2A0IB/wMiAf8DOQH/
        A3MB/wNiAeEDUAGbAzgBWwMfASwsAAMFAQYDJAE0AzsBYwNUAagDagHtA2kB/wMvAf8DJwH/A0gB/wNi
        Ae4DWgG/A0sBjAMuAUf/ADUAAx8BLANMAZADXgHfA1sB8AMMAf8DAQH/AwAB/wMiAf8DVwH/A2cB/wNn
        Af8DTQH/AxgB/wMAAf8DAwH/Ay4B/QNeAe0DYQHcA0YBfQMTARogAAMaASQDSQGIA3EB7AOGAf8DKgH/
        AxkB/wMuAf8DXAH4A2cB6ANaAcIDOQFfLAADCQEMA0ABcANgAdQDZQHqA1cB+wMqAf8DFgH/AzkB/wOU
        Af8DYQHaA0MBdgMYASEDDQER/wAtAAMSARcDKAE8A0IBdANcAcMDYAH/AygB/wMAAf8DCQH/AxwB/wNS
        Af8DmgH/A6wB/wOsAf8DjwH/A0cB/wMYAf8DBQH/AwAB/wMyAf8DagH/A1cBtAM7AWUDJAE1AwwBEBwA
        AzMBUANRAZ8DXQHMA2UB8QM8Af8DJAH/AzQB/wOAAf8DbAHrA1EBnAMxAU4DHQEpAwQBBRgAAwkBCwMh
        ATADNwFaA1MBqgOSAfoDaQH/AycB/wMpAf8DQAH/A10B6gNcAcYDTQGRAysBQv8ANQADJgE4A00BkgNd
        AdEDWgHrAxgB/wMFAf8DAAH/AyYB/wNVAf8DmQH/A9IB/wPkAf8D5AH/A8gB/wOPAf8DTQH/Ax4B/wMA
        Af8DCQH/AxsB/wNcAeYDXQHMA0cBggMdASgcAAMUARsDJAE1A0gBgwNiAd0DiQH/AzYB/wMaAf8DNQH/
        A1wB+ANhAd4DWgHAAzsBZQMJAQwYAAMVARwDQwF2A1wByANgAeMDSgH9AzEB/wMVAf8DQwH/A5UB/wNc
        Ac0DQgFzAyEBMAMRARb/AC0AAxEBFgMiATEDQgFzA10BzANiAf8DIwH/AwAB/wMGAf8DFwH/A1MB/wOa
        Af8DagHnA1wBzQNbAcQDWwHEA14B0gNvAewDjwH/A0gB/wMRAf8DAwH/AwAB/wMuAf8DbQH/A1gBvAM7
        AWMDHwEsAw0BERwAAy8BSQNRAaIDXwHVA14B8AMzAf8DIwH/AysB/wNzAf8DmgH6A1IBoAMtAUYDGQEj
        AwcBCQgAAwoBDQMdASgDNQRWAbADugH/A2YB/wMdAf8DJwH/AzUB/wNhAesDXwHQA00BkgMmATn/ADUA
        AysBQQNNAZEDXAHGA1YB6gMhAf8DBwH/AwAB/wMoAf8DUwH/A5kB/wPSAf8DWQG5Az0BaQMzAVADMwFQ
        A0QBeANaAccDyAH/A48B/wNLAf8DIQH/AwAB/wMMAf8DJQH/A1sB5ANaAcADSAGDAyMBMxwAAxYBHgMr
        AUIDRwGCA14B0gOIAf8DPgH/AxkB/wM7Af8DUgH9A18B2ANXAbQDPQFpAxMBGQgAAx0BKANEAXgDWQG7
        A14B3wNXAf8DNQH/AxMB/wNJAf8DkwH/A1wBwwNCAXMDKAE7AxIBF/8ALQADDQERAxkBIgNDAXYDXgHZ
        A2EB/wMbAf8DAAH/AwEB/wMWAf8DUgH/A4AB/gNwAe0DYQHcA0gBgwMYASAIAAMjATIDTgGVA2IB3wNx
        AfADkAH/A0gB/wMLAf8DAAH/AwAB/wMnAf8DbQH/A1oBxwM7AWQDFwEfAwsBDhwAAykBPgNRAaIDZAHi
        A2cB8gMmAf8DIAH/Ax8B/wNvAf8DygH/A1QBqAMtAUUDGwElAxsBJQM1AVYDWAG6A7wB/wNgAf8DGwH/
        AyEB/wMoAf8DYgHvA2EB3gNMAZADHwEs/wA1AAMtAUYDSwGMA1oBvwNeAe0DJwH/AwYB/wMEAf8DKQH/
        A1MB/wOYAf8DnwH7A1cBtANAAW8DKQE9AwwBDwgAAxIBFwMtAUUDRAF7A1kBwQPIAf8DjgH/A0kB/wMi
        Af8DAAH/AwwB/wMtAf8DXwHlA1gBtwNHAYADJwE6HAADFQEdAzABSwNIAYQDXQHKA4QB/wNDAf8DFAH/
        Az4B/wNnAf8DYQHWA1QBqANPAZkDTwGZA1cBsQNeAd8DYAH/AzYB/wMYAf8DTQH/A44B/wNaAb0DRAF4
        AywBQwMQARX/ADEAAwwBDwNGAX0DZgHqA10B/wMRAf8DAAH/AwAB/wMXAf8DUwH/A5oB/QOSAfcDbwHp
        A0QBewMLAQ4YAAMZASIDTAGPA4YB8QOTAfgDkAH/A0gB/wMMAf8DAAH/AwAB/wMeAf8DbAH/A14B1wM9
        AWkDCwEOAwYBBxwAAyEBMANQAZ0DfQHyA2oB+QMXAf8DGQH/AxwB/wNoAf8DygH/A+UB/wPlAf8DuwH/
        A1gB/wMbAf8DGQH/Ay0B/gNtAfcDgQHxA0oBiQMVARz/ADkAA0gBgwNYAbwDUwH0AyoB/wMDAf8DCAH/
        AycB/wNTAf8DmAH/A3UB8ANXAbQDRAF4AyoBPwMGAQcYAAMNAREDMAFKA0gBgwNaAb8DmgH7A44B/wNI
        Af8DIQH/AwIB/wMKAf8DMgH/A10B6gNWAbIDRAF5AykBPRwAAxMBGQMzAVEDSgGKA1wBxgNxAf8DRQH/
        AxkB/wM+Af8DbgH/A4oB/wOKAf8DZgH/AzUB/wMhAf8DTQH/A3QB+ANYAbwDRwGAAy4BRwMMAQ//ADkA
        A4sB+ANfAfsDFAH+AwAB/wMAAf8DGQH/A1QB/wOaAf8D0gH/A2YB4wNBAXIDBgEHAwMBBBwABAEDAwEE
        AxABFQNJAYUDpQH3A8gB/wOQAf8DSgH/Aw4B/wMAAf8DAAH/AyIB/gNfAfsDYgHkA0IBcxwABAEDBAEF
        AxkBIwNOAZQD2AH/A3EB/wMWAf8DFAH/Ax8B/wMiAf8DIgH/Ax0B/wMSAf8DJwH/A44B/wOBAfEDRwGB
        AwwBDwMDAQQEAf8AOQADYwH/AzAB/wMAAf8DCQH/AyQB/wNSAf8DmQH/A2oB6QNYAbcDRwGBAyoBPywA
        AwYBCAMwAUoDSwGNA1oBwAN7AfIDjgH/A0gB/wMfAf8DBQH/AwcB/wM5Af8DXQHqA0MBdiQAAw0BEQM0
        AVMDTgGUA1oBxwNqAfkDQwH/AyAB/wMVAf8DFQH/AyYB/wNKAf8DXgHwA1kBvgNKAYkDLgFHAwQBBf8A
        QQADHAH/AwoB/wMAAf8DIAH/A1YB/wOaAf8D0gH/A14B0gM+AWsDEwEaAwkBDCwABAIDDAEPAxUBHANG
        AX4DaAHkA8gB/wOQAf8DTQH/AxcB/wMAAf8DDQH/A1UB6gNDAXYkAAMCAQMDDAEQAxkBIwNKAYsDfQHy
        A4QB/wMmAf8DDAH/AwwB/wM0Af8DkwH/A2EB3wNEAXgDFAEbAwsBDgQB/wBBAANOAf8DQwH/AzgB/wNf
        Af8DnQH/A2kB5gNZAb4DSQGGAycBOkAAAy4BSANOAZQDWwHFA24B7QOUAf8DVgH/AzoB/wNFAf8DXQHq
        A0MBdiwAAwQBBQMzBFEBngNdAcoDZwHyA1MB/wNTAf8DYQHrA1wBwwNMAZADLQFE/wBNAAO1Af8DqQH/
        A5wB/wO2Af8D2gH/A1sBxQM9AWgDHQEpAw4BEkAAAxEBFgMgAS0DRAF4A18B1QPTAf8DsAH/A58B/wOr
        Af8DZwHqA0MBdiwABAEDEwEZAyEBMANIAYQDYgHhA8AB/wPAAf8DXQHRA0IBdAMfASwDEAEV/wBNAANa
        Ab0DWgG9A1oBvQNaAb0DWgG9A0kBhwMiATFQAAMrAUEDTwGXA1oBvQNaAb0DWgG9A1oBvQNVAa4DNgFY
        OAADMAFMA1EBogNaAb0DWgG9A00BkgMoATz/AFUAAy8BSQMvAUkDLwFJAy8BSQMvAUkDJAE0Aw8BE1AA
        AxMBGQMnAToDLwFJAy8BSQMvAUkDLwFJAywBQwMZASI4AAMVAR0DKQE+Ay8BSQMvAUkDJgE4AxIBF/8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AFAAAUIBTQE+BwABPgMAASgDAAGMAwABIwMAAQEBAAEBBQABvAEC
        FgAD/wEACP8B/AsACP8B/AsACP8B/AsACP8B/AsACP8B/AsACP8B/AsAAf8B/AEPAf8B4AP/DAAB/wH8
        AQ8B/wHgA/8MAAH/AeABAwH/AeABPwH/AfwMAAH/AeABAwH/AeABPwH/AfwMAAH/AYABAAH/AeABDwH/
        AfAMAAH/AYABAAF/AeABDwH/AfAMAAH/AYABAAF/AeABDwH/AfAMAAH+AgABHwHgAQMB/wGADAAB/gIA
        AR8B4AEDAf8BgAwAAfgCAAEHAfABAAF+AQABDAsAAfgCAAEHAfABAAF+AQABDAsAAeACAAEBAfwBAAEY
        AQABPAsAAeACAAEBAfwBAAEYAQABPAsAAYABAAHAAQABfwMAAfwLAAGAAQABwAEAAX8DAAH8DAABAwHw
        AQABHwHAAQABAwH8DAABAwHwAQABHwHAAQABAwH8DAABBwHwAQABHwHAAQABAwH8DAABHwH8AQABHwHw
        AQABDwH8DAABHwH8AQABHwHwAQABDwH8DAABfwH/AYABHwH8AQABfwH8DAABfwH/AYABHwH8AQABfwH8
        CwABAQL/AeABHwH/AYEB/wH8CwABAQL/AeABHwH/AYEB/wH8CwAI/wH8CwAI/wH8CwAI/wH8CwAI/wH8
        CwAI/wH8CwAL
</value>
  </data>
</root>